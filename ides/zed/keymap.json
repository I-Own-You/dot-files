[
    // non vim keybindings
    // terminal
    {
        "context": "Workspace",
        "bindings": {
            "alt-t": "terminal_panel::ToggleFocus"
        }
    },
    {
        "context": "Terminal",
        "bindings": { "alt-t": "terminal_panel::ToggleFocus" }
    },

    // vim keybindings
    {
        "context": "VimControl && !menu",
        "bindings": {
            "n": ["workspace::SendKeystrokes", "n z z"],
            "N": ["workspace::SendKeystrokes", "N z z"]
        }
    },
    {
        "context": "vim_mode == normal",
        "bindings": {
            "+": "vim::Increment",
            "-": "vim::Decrement"
        }
    },
    {
        "context": "vim_mode == visual",
        "bindings": {
            ">": "editor::Indent",
            "<": "editor::Outdent"
        }
    },
    {
        "context": "vim_mode == normal || vim_mode == visual",
        "bindings": {
            ";": "command_palette::Toggle"
        }
    },
    {
        // only while an editor has focus and youâ€™re in Normal or Visual mode
        "context": "Editor && (vim_mode == normal || vim_mode == visual)",
        "bindings": {
            "space p h": "editor::ToggleSelectedDiffHunks", // show / hide inline diff of the hunk under the cursor
            "space s h": "git::ToggleStaged",
            "space r b b": "git::RestoreFile",
            "space s b": "git::StageAll",
            "space r b i": "git::UnstageAll",
            "space r h": "git::Restore"
        }
    },
    {
        "context": "GitPanel",
        "bindings": {
            "q": "git_panel::Close"
        }
    },
    {
        "context": "Editor && vim_mode == normal",
        "bindings": {
            "space v v": "pane::SplitRight",
            "space x x": "pane::SplitDown",
            "space x t": "workspace::CopyPath",
            "space e": "project_panel::ToggleFocus",
            "space g c": "git::Commit",
            "space g p": "git::Push",
            "space b l": "git::Blame",
            "space m t": "git_panel::ToggleFocus",
            "space g b b": "git::Branch",
            // "g s": "outline::Toggle",
            // "g S": "project_symbols::Toggle",
            "space k a": "editor::ToggleCodeActions",
            "space l w": "diagnostics::Deploy",
            "space space": "pane::DeploySearch",
            "alt-shift-h": "vim::ResizePaneLeft",
            "alt-shift-l": "vim::ResizePaneRight",
            "alt-shift-j": "vim::ResizePaneDown",
            "alt-shift-k": "vim::ResizePaneUp",
            "ctrl-space h": "workspace::SwapPaneLeft",
            "ctrl-space l": "workspace::SwapPaneRight",
            "ctrl-space j": "workspace::SwapPaneDown",
            "ctrl-space k": "workspace::SwapPaneUp",
            "g r": "editor::FindAllReferences",
            "g I": "editor::GoToImplementation",
            "g Y": "editor::GoToTypeDefinition",
            "g D": "editor::GoToDeclaration",
            "g d": "editor::GoToDefinition",
            // "space r e": "editor::Rename", // c-d now
            // "] d": "editor::GoToDiagnostic",
            // "[ d": "editor::GoToPreviousDiagnostic",
            "space l s": "editor::ShowSignatureHelp",
            "ctrl-/": "workspace::ToggleZoom"
        }
    },
    {
        "context": "!ContextEditor > Editor && mode == full",
        "bindings": {
            "alt-n": "editor::GoToHunk",
            "alt-p": "editor::GoToPreviousHunk"
        }
    },
    {
        "context": "Editor && vim_mode == insert",
        "bindings": {
            "j k": ["workspace::SendKeystrokes", "escape"],
            "ctrl-l": "editor::ShowSignatureHelp",
            "ctrl-e": "editor::LineDown",
            "ctrl-y": "editor::LineUp"
        }
    },
    {
        "context": "Editor && vim_mode == insert && showing_completions || (Editor && showing_code_actions)",
        "bindings": {
            "ctrl-e": "editor::Cancel",
            "ctrl-c": "editor::Cancel",
            "tab": "editor::ContextMenuNext",
            "shift-tab": "editor::ContextMenuPrevious"
        }
    },
    {
        "context": "Editor && (vim_mode == normal || vim_mode == insert || vim_mode == visual)",
        "bindings": {
            "alt-j": "editor::MoveLineDown",
            "alt-k": "editor::MoveLineUp"
        }
    },
    {
        "context": "ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView",
        "bindings": {
            "ctrl-j": "workspace::ActivatePaneDown",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight"
        }
    },
    {
        "context": "VimControl && !menu",
        "bindings": {
            "q": null,
            "tab": "pane::ActivateNextItem",
            "shift-tab": "pane::ActivatePreviousItem",
            "ctrl-[": "vim::NextMethodStart",
            "ctrl-]": "vim::PreviousMethodStart",
            "ctrl-e": [
                "workspace::SendKeystrokes",
                "ctrl-e ctrl-e ctrl-e ctrl-e ctrl-e"
            ],
            "ctrl-y": [
                "workspace::SendKeystrokes",
                "ctrl-y ctrl-y ctrl-y ctrl-y ctrl-y"
            ]
        }
    },
    {
        "context": "Editor && mode == full && vim_mode == normal",
        "bindings": {
            "space w w": "editor::ToggleSoftWrap",
            "space n h": "buffer_search::Dismiss",
            "space b o": "pane::CloseInactiveItems"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "alt-f": "file_finder::Toggle"
        }
    },
    {
        "context": "FileFinder",
        "bindings": {
            "alt-f": "menu::Cancel"
        }
    },
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "q": "workspace::ToggleLeftDock",
            ";": "command_palette::Toggle",
            "f": "project_panel::NewFile",
            "space e": "project_panel::ToggleFocus",
            "r": "project_panel::Rename",
            "[": "project_panel::SelectNextDirectory",
            "]": "project_panel::SelectPrevDirectory"
        }
    }
]
